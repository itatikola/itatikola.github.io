<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-05-16T17:19:11-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Indira Tatikola</title><subtitle>Hi! I’m Indira and I’m studying computer science at the Georgia Institute of Technology.  My areas of interest are computer vision, graphics, and machine learning and their applications in social media. Feel free to reach out through any platform! </subtitle><entry><title type="html">Project #2: Recitation Slides</title><link href="http://localhost:4000/2024/01/15/Project-2-Recitation-Slides.html" rel="alternate" type="text/html" title="Project #2: Recitation Slides" /><published>2024-01-15T00:00:00-05:00</published><updated>2024-01-15T00:00:00-05:00</updated><id>http://localhost:4000/2024/01/15/Project-#2-Recitation-Slides</id><content type="html" xml:base="http://localhost:4000/2024/01/15/Project-2-Recitation-Slides.html">&lt;p&gt;     One of my favorite experiences in college so far has been being a teaching assistant for the data structures and algorithms course at my school. This past semester, I spent many hours making 15 comprehensive slide decks for our weekly, TA-led recitation sections. &lt;!--more--&gt; This course is the largest course offered at Georgia Tech, and it runs heavily on the 50-60 TAs who work very hard to provide top-notch resources for students to understand important CS fundamentals. Our team has created csvistool.com, endless exam preparation material, and sometimes students even fill in for our professors as lecturers! It’s an inspiring group to be a part of, and so I was inspired to contribute something as well.&lt;/p&gt;

&lt;p&gt;     For years, the TAs have wondered why our course specifically has poor recitation enthusiasm among students. Many of our sections getting cancelled or merged as the semester progresses because of low attendance, and this doesn’t seem to happen as often in other courses. I noticed that our recitations (a weekly, TA-led recap class of 20-30 students) lacked uniformity and quality assurance. In other courses, sometimes a lot of my learning comes from the lab or studio associated with the course, led by TAs. Specifically, the slides are incredibly helpful as students are really good at simplifying content for their peers. I wanted to create the same system for our course.&lt;/p&gt;

&lt;p&gt;     This semester, I set out to create a comprehensive set of slides for each week’s recitation. Every slide covers two or three major concepts in our class (either a data structure or an algorithm) and uses the same format to explain each one. In the case of data structures, I try to first introduce the ADT the structure will implement, the motivation for why we would use this structure, and then the inner workings of three major operations: search, add, and remove. For algorithms, I first explain the problem goal or purpose of an algorithm, do a pseudocode analysis, and then perform a large diagramming example. After this, we talk about time complexity. Finally, the slides end with a couple coding questions for students to try on their own.&lt;/p&gt;

&lt;p&gt;     These slides are made with the idea that students may reference them later without the help of a TA. Therefore, explanations and all the content must be present on the slides, but in a non-overwhelming and aesthetically pleasing (though this is just my preference) way. I think the common explanation structure helps organize the overwhelming amount of content for students so they “know what they have to know.” In addition, I’ve peppered in prompting questions throughout the slides to increase interactivity.&lt;/p&gt;

&lt;p&gt;     In the spirit of open source, these slides are available on my public GitHub for computer science students anywhere to benefit from. Please reach out if you see errors! If they help even one person out there score an extra point on their exam, my time was well spent :).&lt;/p&gt;</content><author><name></name></author><summary type="html">     One of my favorite experiences in college so far has been being a teaching assistant for the data structures and algorithms course at my school. This past semester, I spent many hours making 15 comprehensive slide decks for our weekly, TA-led recitation sections.</summary></entry><entry><title type="html">Project #1: Personal Website</title><link href="http://localhost:4000/2023/12/15/Project-1-Personal-Site.html" rel="alternate" type="text/html" title="Project #1: Personal Website" /><published>2023-12-15T00:00:00-05:00</published><updated>2023-12-15T00:00:00-05:00</updated><id>http://localhost:4000/2023/12/15/Project-#1-Personal-Site</id><content type="html" xml:base="http://localhost:4000/2023/12/15/Project-1-Personal-Site.html">&lt;p&gt;    In November, I felt an urge to put my programming capabilities to the test and start developing. As I delved into other people’s personal projects to look for inspiration and guidance, I felt overwhelmed with where to start.  &lt;!--more--&gt; I would get discouraged by how advanced other people were, how many various platforms and languages they knew, and the amount of time many of my peers had already spent building their skills. It just felt like it was impossible to catch up - but everyone has to start somewhere. Instead of wallowing, I needed to create something that would encourage me to continue creating. I thought, “Everyone seems to have a personal site where they put their projects, which means that 1) I can create a site, and 2) it’ll look pretty dumb if there are no projects on it, so I’ll be forced to keep going.”&lt;/p&gt;

&lt;p&gt;    And here’s the final product - welcome to my site! Here’s a little bit about it. I’m hosting the site on Github Pages and used Github’s static site builder, Jekyll, for the general HTML format. I chose Jekyll because it’s meant to be used specifically for blog-style websites. I copied over the default CSS theme, “minima”, into my local folders and made edits from there to personalize the design. I tried to mimic the Apple iOS theme a bit with rounded edges, modern fonts, and a simple color scheme (with a pop of color!). I also got a custom domain name from CloudFlare.&lt;/p&gt;

&lt;p&gt;    I’m using Google Analytics to keep track of site data by copying a site tag onto each HTML page. From my analytics dashboard, I can view page-by-page insights on how many people are viewing the site.&lt;/p&gt;

&lt;p&gt;    Pretty simple start, can’t wait to keep experimenting :)&lt;/p&gt;</content><author><name></name></author><summary type="html">    In November, I felt an urge to put my programming capabilities to the test and start developing. As I delved into other people’s personal projects to look for inspiration and guidance, I felt overwhelmed with where to start.</summary></entry></feed>